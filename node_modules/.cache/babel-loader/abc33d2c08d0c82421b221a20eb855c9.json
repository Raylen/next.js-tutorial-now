{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\n\n/*\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../components/Layout';\n\n\nconst Index = (props) => (\n    <Layout>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map(({show}) => (\n                <li key={show.id}>\n                    <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n)\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n\n    return {\n        shows: data\n    }\n}\n\nexport default Index\n\n*/\nimport Layout from '../components/Layout.js';\nimport Link from 'next/link';\n\nfunction getPosts() {\n  return [{\n    id: 'hello-nextjs',\n    title: 'Hello Next.js'\n  }, {\n    id: 'learn-nextjs',\n    title: 'Learn Next.js is awesome'\n  }, {\n    id: 'deploy-nextjs',\n    title: 'Deploy apps with ZEIT'\n  }];\n}\n\nvar PostLink = function PostLink(_ref) {\n  var post = _ref.post;\n  return React.createElement(\"li\", null, React.createElement(Link, {\n    as: \"/p/\".concat(post.id),\n    href: \"/post?title=\".concat(post.title)\n  }, React.createElement(\"a\", null, post.title)));\n};\n\nexport default (function () {\n  return React.createElement(Layout, null, React.createElement(\"h1\", {\n    className: \"jsx-1900835274\"\n  }, \"My Blog\"), React.createElement(\"ul\", {\n    className: \"jsx-1900835274\"\n  }, getPosts().map(function (post) {\n    return React.createElement(PostLink, {\n      key: post.id,\n      post: post\n    });\n  })), React.createElement(_JSXStyle, {\n    id: \"1900835274\"\n  }, \"h1.jsx-1900835274,a.jsx-1900835274{font-family:\\\"Arial\\\";}ul.jsx-1900835274{padding:0;}li.jsx-1900835274{list-style:none;margin:5px 0;}a.jsx-1900835274{-webkit-text-decoration:none;text-decoration:none;color:blue;}a.jsx-1900835274:hover{opacity:0.6;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2RkaS1kZXYvbmV4dC5qcy10ZXN0L3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdFb0IsQUFHcUMsQUFJVixBQUlNLEFBS0ssQUFLVCxVQWJoQixFQWNBLElBVmlCLElBUmpCLFNBU0EscUJBSWUsV0FDZiIsImZpbGUiOiIvaG9tZS9kZGktZGV2L25leHQuanMtdGVzdC9wYWdlcy9pbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xuaW1wb3J0IGZldGNoIGZyb20gJ2lzb21vcnBoaWMtdW5mZXRjaCdcblxuaW1wb3J0IExheW91dCBmcm9tICcuLi9jb21wb25lbnRzL0xheW91dCc7XG5cblxuY29uc3QgSW5kZXggPSAocHJvcHMpID0+IChcbiAgICA8TGF5b3V0PlxuICAgICAgICA8aDE+QmF0bWFuIFRWIFNob3dzPC9oMT5cbiAgICAgICAgPHVsPlxuICAgICAgICAgICAge3Byb3BzLnNob3dzLm1hcCgoe3Nob3d9KSA9PiAoXG4gICAgICAgICAgICAgICAgPGxpIGtleT17c2hvdy5pZH0+XG4gICAgICAgICAgICAgICAgICAgIDxMaW5rIGFzPXtgL3AvJHtzaG93LmlkfWB9IGhyZWY9e2AvcG9zdD9pZD0ke3Nob3cuaWR9YH0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8YT57c2hvdy5uYW1lfTwvYT5cbiAgICAgICAgICAgICAgICAgICAgPC9MaW5rPlxuICAgICAgICAgICAgICAgIDwvbGk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC91bD5cbiAgICA8L0xheW91dD5cbilcblxuSW5kZXguZ2V0SW5pdGlhbFByb3BzID0gYXN5bmMgZnVuY3Rpb24oKSB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLnR2bWF6ZS5jb20vc2VhcmNoL3Nob3dzP3E9YmF0bWFuJyk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG5cbiAgICBjb25zb2xlLmxvZyhgU2hvdyBkYXRhIGZldGNoZWQuIENvdW50OiAke2RhdGEubGVuZ3RofWApO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgc2hvd3M6IGRhdGFcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4XG5cbiovXG5cbmltcG9ydCBMYXlvdXQgZnJvbSAnLi4vY29tcG9uZW50cy9MYXlvdXQuanMnXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnXG5cbmZ1bmN0aW9uIGdldFBvc3RzICgpIHtcbiAgICByZXR1cm4gW1xuICAgICAgICB7IGlkOiAnaGVsbG8tbmV4dGpzJywgdGl0bGU6ICdIZWxsbyBOZXh0LmpzJ30sXG4gICAgICAgIHsgaWQ6ICdsZWFybi1uZXh0anMnLCB0aXRsZTogJ0xlYXJuIE5leHQuanMgaXMgYXdlc29tZSd9LFxuICAgICAgICB7IGlkOiAnZGVwbG95LW5leHRqcycsIHRpdGxlOiAnRGVwbG95IGFwcHMgd2l0aCBaRUlUJ30sXG4gICAgXVxufVxuXG5jb25zdCBQb3N0TGluayA9ICh7IHBvc3QgfSkgPT4gKFxuICAgIDxsaT5cbiAgICAgICAgPExpbmsgYXM9e2AvcC8ke3Bvc3QuaWR9YH0gaHJlZj17YC9wb3N0P3RpdGxlPSR7cG9zdC50aXRsZX1gfT5cbiAgICAgICAgICAgIDxhPntwb3N0LnRpdGxlfTwvYT5cbiAgICAgICAgPC9MaW5rPlxuICAgIDwvbGk+XG4pXG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IChcbiAgICA8TGF5b3V0PlxuICAgICAgICA8aDE+TXkgQmxvZzwvaDE+XG4gICAgICAgIDx1bD5cbiAgICAgICAgICAgIHtnZXRQb3N0cygpLm1hcCgocG9zdCkgPT4gKFxuICAgICAgICAgICAgICAgIDxQb3N0TGluayBrZXk9e3Bvc3QuaWR9IHBvc3Q9e3Bvc3R9Lz5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8L3VsPlxuICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICBoMSwgYSB7XG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiQXJpYWxcIjtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdWwge1xuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGxpIHtcbiAgICAgICAgICAgICAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgICAgICAgICAgICAgIG1hcmdpbjogNXB4IDA7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGEge1xuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogYmx1ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYTpob3ZlciB7XG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgICAgICAgfVxuICAgICAgICBgfTwvc3R5bGU+XG4gICAgPC9MYXlvdXQ+XG4pXG4iXX0= */\\n/*@ sourceURL=/home/ddi-dev/next.js-test/pages/index.js */\"));\n});","map":{"version":3,"sources":["/home/ddi-dev/next.js-test/pages/index.js"],"names":["Layout","Link","getPosts","id","title","PostLink","post","map"],"mappings":";;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA,OAAOA,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,GAAqB;AACjB,SAAO,CACH;AAAEC,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GADG,EAEH;AAAED,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAE;AAA7B,GAFG,EAGH;AAAED,IAAAA,EAAE,EAAE,eAAN;AAAuBC,IAAAA,KAAK,EAAE;AAA9B,GAHG,CAAP;AAKH;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SACb,gCACI,oBAAC,IAAD;AAAM,IAAA,EAAE,eAAQA,IAAI,CAACH,EAAb,CAAR;AAA2B,IAAA,IAAI,wBAAiBG,IAAI,CAACF,KAAtB;AAA/B,KACI,+BAAIE,IAAI,CAACF,KAAT,CADJ,CADJ,CADa;AAAA,CAAjB;;AAQA,gBAAe;AAAA,SACX,oBAAC,MAAD,QACI;AAAA;AAAA,eADJ,EAEI;AAAA;AAAA,KACKF,QAAQ,GAAGK,GAAX,CAAe,UAACD,IAAD;AAAA,WACZ,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,IAAI,CAACH,EAApB;AAAwB,MAAA,IAAI,EAAEG;AAA9B,MADY;AAAA,GAAf,CADL,CAFJ;AAAA;AAAA,ozGADW;AAAA,CAAf","sourcesContent":["/*\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch'\n\nimport Layout from '../components/Layout';\n\n\nconst Index = (props) => (\n    <Layout>\n        <h1>Batman TV Shows</h1>\n        <ul>\n            {props.shows.map(({show}) => (\n                <li key={show.id}>\n                    <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n                        <a>{show.name}</a>\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    </Layout>\n)\n\nIndex.getInitialProps = async function() {\n    const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n    const data = await res.json();\n\n    console.log(`Show data fetched. Count: ${data.length}`);\n\n    return {\n        shows: data\n    }\n}\n\nexport default Index\n\n*/\n\nimport Layout from '../components/Layout.js'\nimport Link from 'next/link'\n\nfunction getPosts () {\n    return [\n        { id: 'hello-nextjs', title: 'Hello Next.js'},\n        { id: 'learn-nextjs', title: 'Learn Next.js is awesome'},\n        { id: 'deploy-nextjs', title: 'Deploy apps with ZEIT'},\n    ]\n}\n\nconst PostLink = ({ post }) => (\n    <li>\n        <Link as={`/p/${post.id}`} href={`/post?title=${post.title}`}>\n            <a>{post.title}</a>\n        </Link>\n    </li>\n)\n\nexport default () => (\n    <Layout>\n        <h1>My Blog</h1>\n        <ul>\n            {getPosts().map((post) => (\n                <PostLink key={post.id} post={post}/>\n            ))}\n        </ul>\n        <style jsx>{`\n            h1, a {\n                font-family: \"Arial\";\n            }\n\n            ul {\n                padding: 0;\n            }\n\n            li {\n                list-style: none;\n                margin: 5px 0;\n            }\n\n            a {\n                text-decoration: none;\n                color: blue;\n            }\n\n            a:hover {\n                opacity: 0.6;\n            }\n        `}</style>\n    </Layout>\n)\n"]},"metadata":{},"sourceType":"module"}